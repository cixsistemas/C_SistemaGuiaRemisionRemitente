<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABQUFABMTEwAWFhYAGRkZABwcHAAgICAALCwsADIyMgA1NTUAPj4+AEJCQgBFRUUAS0tLAE9P
        TwBRUVEAVFRUAFlZWQBdXV0AYmJiAGVlZQBra2sAbW1tAHFxcQB1dXUAeHh4AH19fQCBgYEAhYWFAImJ
        iQCNjY0AkJCQAJaWlgCZmZkAnp6eAKKiogCmpqYAqampAK2trQCxsbEAtbW1ALq6ugC+vr4AwcHBAMbG
        xgDIyMgAzc3NANDQ0ADW1tYA2traAN3d3QDh4eEA5eXlAOnp6QDt7e0A8fHxAPT09AD4+PgA/v7+AHH/
        0wCR/9wAsf/lANH/8AD///8AAAAAAAAvDgAAUBgAAHAiAACQLAAAsDYAAM9AAADwSgAR/1sAMf9xAFH/
        hwBx/50Akf+yALH/yQDR/98A////AAAAAAACLwAABFAAAAZwAAAIkAAACrAAAAvPAAAO8AAAIP8SAD3/
        MQBb/1EAef9xAJj/kQC1/7EA1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEywAABZzwAAZ/AAAHj/
        EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQAACOsAAAqc8AAMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAyNTU1NTU1NTU1NTU1NTU1NS0AAAAAAAAAAAAAAAAAHjg/Pz8/Pz8/Pz8/
        Pz8/Pz8/MxwAAAAAAAAAAAAAAAARMD8/Pz8/Pz8/Pz8/Pz8/Pz8pEgAAAAAAAAAAAAAAABUsPz8/Pz8/
        Pz8/Pz8/Pz8/PyUXAAAAAAAAACIeHR0bEyY/Pz8/Pz8/Pz8/Pz8/Pz8/HxYcHR0fAAAAJCwrKykQIT8/
        Pz8/Pz8/Pz8/Pz8/Pz8WFysrKywhACInJCQkJw0ZOTY2NjY2NjY2NjY2NjY2Ng4VJiQkJSYAIyknJyco
        Cg8uLCwsLCwsLCwsLCwsLC0rCBMpJycnKAAjKykpKigHCCMiIiIiIiIiIiIiIiIiIyADECspKSkrJSQu
        LS0uKQUEFBQUFBQUFBQUFBQUFBQUEQEMLi0tLS4jJDIwMDErAgABAQEBAQEBAQEBAQEBAQEBAAowMDAw
        MSMmNTMzNCwBAAAAAAAAAAAAAAAAAAAAAAAACTIzMzM0JCc4NTU2MgsFBgYGBgYGBgYGBgYGBgYGBgUX
        NjU1NTclJzk3Nzc4NTEyMjIyMjIyMjIyMjIyMjIyMjY4Nzc4OSUoPzk5OTk6Pz8/Pz8/Pz8/Pz8/Pz8/
        Pz8/OTk5OTo/JSg6OTk5OTg1NjY2NjY2NjY2NjY2NjY2NjY5NTI0MjomKDk4ODg5JQwPDw8PDw4ODg4O
        Dg8PDw8PDS0wKSwpOAAnPzk5OTopFRgZGRobHB0eHh0cGhoZGRgWLzk1NzU5ACY6OTk5OTAnKSkqKywt
        Li8vLi0sKyopKSczOTk5OjYAAC8vLy8xHwcHBwcHBwcHBwcHBwcHBwcHCCcwLy8wKgAAIyYlJScZDCAf
        Hx8fHx8fHx8fHx8fHx4IICYlJScjAAAAAAAAAAAZODU1NTU1NTU1NTU1NTU2NRIAAAAAAAAAAAAAAAAA
        ABg2NDQ0NDQ0NDQ0NDQ0NDQ0EQAAAAAAAAAAAAAAAAAAGDg1NTU1NTU1NTU1NTU1NTURAAAAAAAAAAAA
        AAAAAAAYOTY2NjY2NjY2NjY2NjY2NhEAAAAAAAAAAAAAAAAAABk5Nzc3Nzc3Nzc3Nzc3Nzc3EQAAAAAA
        AAAAAAAAAAAAGTo4ODg4ODg4ODg4ODg4ODgRAAAAAAAAAAAAAAAAAAAePzk5OTk5OTk5OTk5OTk5OB0A
        AAAAAAAAAAAAAAAAAAA/Pz8/Pz8/Pz8/Pz8/Pz8/AAAAAAAAAAAAAAAAAAAAAC8uLi4uLi4uLi4uLi4u
        Li4AAAAAAAAAAP///////////gAAf/wAAD/8AAA//AAAP4AAAAOAAAABAAAAAQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAYAAAAGAAAAB/gAAf/4AAH/+AAB//gAAf/4A
        AH/+AAB//gAAf/8AAP//AAD/
</value>
  </data>
</root>